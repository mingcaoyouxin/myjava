该Module对应于《Java并发编程实战》第三章对象的共享
主要介绍如何共享和发布对象，从而使他们能够安全的有多个线程同时访问。我们不仅仅希望防止某个线程正在使用对象状态而另一个线程同时修改该状态，而且希望确保当一个线程修改了对象状态后，其他线程能够看到发生的状态变化。

1、可见性
    可见性是一种复杂的属性，当读操作和写操作在不同的线程中执行时，无法确保执行读操作的线程能够及时的看到其他线程写入的值，因此必须使用同步机制。
    实例：NoVisiblity.java MutableInteger SynchronizedInteger.java
2、非原子的64位操作
    最低安全性：当线程在没有同步的情况下读取变量时，可能会得到一个失效值，但至少这个失效值是由之前某个线程设置的值，而不是一个随机值。这种安全保证也称为最低安全性。
    最低安全性适用于大多数变量，例外：非volatile类型的64位数值变量（long、double）因为非volatile的64位变量，JVM允许将64位的读操作或写操作分解为两个32位的操作。
3、加锁与可见性
    加锁的含义不仅仅局限于互斥行为，还包括内存可见性。为了确保所有线程都能看到共享变量的最新值，所有执行读操作或者写操作的线程都必须在同一个锁上同步
4、volatile变量
5、发布与逸出

